!!! 5
%html{:lang => :de}
  %head
    %meta{:charset => 'utf-8'}
    %title Forschungstabelle
    :css
      #add {
        float: right;
        padding: 0.25em;
        margin: 2em 0.25em 1em 0.25em;
        color: yellow;
        background-color: darkgreen;
        border: 1px solid black;
      }

      .content {
        width: 70em;
        margin: 6em auto 0 auto;
      }

      .title {
        display: inline;
        float: left;
      }

      header button, header a {
        float: left;
        margin: 2em 0.25em 1em 0.25em;
      }

      header {
        position: fixed;
        top: 0;
        left: 50%;
        z-index: 10;
        display: block;
        width: 70em;
        margin-left: -35em;
        background-color: white;
      }

      nav {
        float: right;
      }

      table {
        clear: both;
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 2em;
      }
        
      table, table th {
        border: none;
        border-bottom: 1px solid black;
        text-align: center;
      }

      tr:nth-of-type(even) {
        background-color: gray;
      }

      th.civil {
        background-color: green;
      }

      th.military {
        background-color: brown;
      }

      tr .mark {
        background-color: red;
      }

      th {
        font-weight: bold;
      }

      @media only screen and (max-width: 1120px) {
        .content {
          width: 100%;
        }

        header {
          width: 100%;
          left: 0;
          margin-left: 0;
        }

        header * {
          display: inline-block;
        }

        table {
          padding-top: 10em;
        }

        /*
        table + table {
          padding-top: 1em;
        }
        */
        
        @media only screen and (min-width: 708px) {
          table { /* Close gap when jumped to via anchor */
            padding-top: 6em;
            margin-top: -6em;
          }
        }

        table, thead, tbody, tr, th, td {
          display: block;
          text-align: left;
        }

        thead tr { /* do not display: none for a11y */
          position: absolute;
          top: -9999px;
          left: -9999px;
        }
        
        tr {
          border: 1px solid black;
        }

        td { /* behave like tr */
          border: none;
          border-bottom: 1px solid black;
          position: relative;
          text-align: auto;
          padding: 0.5em 0;
          padding-left: 50%;
        }

        td:before { /* behave like th */
          position: absolute;
          top: 6px; /* "padding" */
          left: 6px; /* "padding" */
          width: 45%;
          padding-right: 10px;
          white-space: nowrap;
        }

        td:last-child {
          border-bottom: none;
        }

        #research td:nth-of-type(1):before { content: "Nickname"; }
        #research td:nth-of-type(2):before { content: "Gilde"; }
        #research td:nth-of-type(3):before { content: "Verwaltung"; }
        #research td:nth-of-type(4):before { content: "Staatswesen"; }
        #research td:nth-of-type(5):before { content: "Feudalismus"; }
        #research td:nth-of-type(6):before { content: "Spionage"; }
        #research td:nth-of-type(7):before { content: "Forstwirtschaft"; }
        #research td:nth-of-type(8):before { content: "Stollenbau"; }
        #research td:nth-of-type(9):before { content: "Braukunst"; }
        #research td:nth-of-type(10):before { content: "Feldwirtschaft"; }

        #development td:nth-of-type(1):before { content: "Nickname"; }
        #development td:nth-of-type(2):before { content: "Gilde"; }
        #development td:nth-of-type(3):before { content: "Yari"; }
        #development td:nth-of-type(4):before { content: "Katana"; }
        #development td:nth-of-type(5):before { content: "Naginata"; }
        #development td:nth-of-type(6):before { content: "Arkebuse"; }
        #development td:nth-of-type(7):before { content: "Yari"; }
        #development td:nth-of-type(8):before { content: "Ashigaru-R端stung"; }
        #development td:nth-of-type(9):before { content: "Samurai-R端stung"; }
        #development td:nth-of-type(10):before { content: "Entermesser"; }
        #development td:nth-of-type(11):before { content: "Muskete"; }
        #development td:nth-of-type(12):before { content: "Kanone"; }
      }

  %body
    %header
      %h1.title Schlacht Um Kyoto
      %button#togetherjs{:type => 'button', :onclick => 'TogetherJS(this); return false;', 'data-end-togetherjs-html' => 'Alleine'} Kollaborieren
      %nav
        %a#Schreiberschule{:href => '#research'} Schreiberschule
        %a#Schmiede{:href => '#development'} Schmiede
        #add +

    .content
      %table#research
        %thead
          %tr
            %th Nickname
            %th Gilde
            %th.civil Verwaltung
            %th.civil Staatswesen
            %th.civil Feudalismus
            %th.civil Spionage
            %th.civil Forstwirtschaft
            %th.civil Stollenbau
            %th.civil Braukunst
            %th.civil Feldwirtschaft
        %tbody
  
      %table#development
        %thead
          %tr
            %th Nickname
            %th Gilde
            %th.military Yari
            %th.military Katana
            %th.military Naginata
            %th.military Arkebuse
            %th.military Yumi
            %th.military Ashigaru-R端stung
            %th.military Samurai-R端stung
            %th.military Entermesser
            %th.military Muskete
            %th.military Kanone
        %tbody

    :javascript
      (function() {
        'use strict';
        var res = document.querySelector('#research tbody');
        var dev = document.querySelector('#development tbody');
        var add = document.querySelector('#add');

        add.addEventListener('click', function(e) {
          appendRow(res);
          appendRow(dev);
        }, false);

        res.addEventListener('click', function(e) {
          updateCell(e.target);
        }, false);
        dev.addEventListener('click', function(e) {
          updateCell(e.target);
        }, false);

        var appendRow = function(table) {
          var tr = document.createElement('tr');
          var td;

          td = document.createElement('td');
          td.appendChild(document.createTextNode('User'));
          tr.appendChild(td);
  
          td = document.createElement('td');
          td.appendChild(document.createTextNode('Guild'));
          tr.appendChild(td);

          var tableType = table.parentElement.id;
          if (tableType === 'research') {
            table.appendChild(preFillResearch(tr));
          } else {
            table.appendChild(preFillDevelopment(tr));
          }
        };

        var preFillResearch = function(row) {
          var td;
          for (var i = 0; i < 8; i++) {
            td = document.createElement('td');
            td.appendChild(document.createTextNode('0'));
            row.appendChild(td);
          }
          return row;
        };

        var preFillDevelopment = function(row) {
          var td;
          for (var i = 0; i < 10; i++) {
            td = document.createElement('td');
            td.appendChild(document.createTextNode('0'));
            row.appendChild(td);
          }
          return row;
        };

        var removeMarksInRow = function(cell) {
          var siblings = cell.parentElement.children;
          for (var i = 0; i < siblings.length; i++) {
            siblings[i].classList.remove('mark');
          }
        };

        var updateCell = function(cell) {
          if (cell.cellIndex > 1) {
            removeMarksInRow(cell);
            cell.classList.add('mark');
          }

          var input = document.createElement('input');
          input.type = 'text';
          input.value = cell.textContent;
          cell.textContent = '';
          input.addEventListener('keypress', function(e) {
            if (!e) e = window.event;
            var kc = e.keyCode || e.which;
            if (kc == '13') { // return key
              cell.textContent = this.value;
              var tableType = cell.parentElement.parentElement.parentElement.id;
              var tableRow = parseInt(cell.parentElement.rowIndex)-1;
              var otherRow;
              if (tableType === 'research') {
                otherRow = dev.children[tableRow];
              } else {
                otherRow = res.children[tableRow];
              }
              var otherCell = otherRow.children[cell.cellIndex];
              otherCell.textContent = cell.textContent;
              updateStorage();
              try { this.parentNode.removeChild(this); } catch(e) {};
            }
          }, false);
          cell.appendChild(input);
        };

        var updateStorage = function() {
          var trRes = res.querySelectorAll('tr');
          var trDev = dev.querySelectorAll('tr');
          var store = {};
          var tds, dataRow, markedCell;

          for (var i = 0; i < trRes.length; i++) {
            tds = trRes[i].childNodes;
            markedCell = trRes[i].querySelector('.mark') || null;
            if (markedCell) {
              markedCell = markedCell.cellIndex;
            } else {
              markedCell = -1;
            }
            store[i] = {
              nickname: tds[0].textContent,
              guild: tds[1].textContent,
              administration: tds[2].textContent,
              politicalSystem: tds[3].textContent,
              feudalism: tds[4].textContent,
              espionage: tds[5].textContent,
              forestry: tds[6].textContent,
              galleryConstruction: tds[7].textContent,
              artOfBrewing: tds[8].textContent,
              agriculture: tds[9].textContent,
              markedResearch: markedCell
            };
          }

          for (var j = 0; j < trDev.length; j++) {
            tds = trDev[j].childNodes;
            markedCell = trDev[j].querySelector('.mark') || null;
            if (markedCell) {
              markedCell = markedCell.cellIndex;
            } else {
              markedCell = -1;
            }
            store[j].yari = tds[2].textContent;
            store[j].katana = tds[3].textContent;
            store[j].naginata = tds[4].textContent;
            store[j].arkebuse = tds[5].textContent;
            store[j].yumi = tds[6].textContent;
            store[j].ashigaru = tds[7].textContent;
            store[j].samurai = tds[8].textContent;
            store[j].cutlass = tds[9].textContent;
            store[j].musket = tds[10].textContent;
            store[j].cannon = tds[11].textContent;
            store[j].markedDevelopment = markedCell;
          }
          window.sessionStorage.setItem('data', JSON.stringify(store));
        };

        var data = JSON.parse(window.sessionStorage.getItem('data')) || {};
        var rows = Object.keys(data).length || 0;
        var rowRes, rowDev, dataRow;
        for (var iRows = 0; iRows < rows; iRows++) {
          appendRow(res);
          appendRow(dev);
          rowRes = res.lastChild;
          rowDev = dev.lastChild;
          dataRow = data[iRows];

          rowRes.children[0].textContent = dataRow.nickname;
          rowRes.children[1].textContent = dataRow.guild;
          rowRes.children[2].textContent = dataRow.administration;
          rowRes.children[3].textContent = dataRow.politicalSystem;
          rowRes.children[4].textContent = dataRow.feudalism;
          rowRes.children[5].textContent = dataRow.espionage;
          rowRes.children[6].textContent = dataRow.forestry;
          rowRes.children[7].textContent = dataRow.galleryConstruction;
          rowRes.children[8].textContent = dataRow.artOfBrewing;
          rowRes.children[9].textContent = dataRow.agriculture;

          rowDev.children[0].textContent = dataRow.nickname;
          rowDev.children[1].textContent = dataRow.guild;
          rowDev.children[2].textContent = dataRow.yari;
          rowDev.children[3].textContent = dataRow.katana;
          rowDev.children[4].textContent = dataRow.naginata;
          rowDev.children[5].textContent = dataRow.arkebuse;
          rowDev.children[6].textContent = dataRow.yumi;
          rowDev.children[7].textContent = dataRow.ashigaru;
          rowDev.children[8].textContent = dataRow.samurai;
          rowDev.children[9].textContent = dataRow.cutlass;
          rowDev.children[10].textContent = dataRow.musket;
          rowDev.children[11].textContent = dataRow.cannon;

          if (dataRow.markedResearch > 1) {
            rowRes.children[dataRow.markedResearch].classList.add('mark');
          }

          if (dataRow.markedDevelopment > 1) {
            rowDev.children[dataRow.markedDevelopment].classList.add('mark');
          }
        }
      })();

    :javascript
      TogetherJSConfig_dontShowClicks = true;
      TogetherJSConfig_cloneClicks = true;

    %script{:type => 'text/javascript', :src => 'togetherjs.min.js'}
